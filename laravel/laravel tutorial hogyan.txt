Teszt projekt:

resources/views - új fájl: teszt.blade.php
html (!-el), bootstrap

routes/web.php - Route::get('/teszt', function () {
    return view('teszt');
});

url-be a port név után /teszt



app/http/controllers - új fájl: tesztcontroller.php  (függvényeket írunk a views-hoz)

routes/web.php - a fenti helyett: Route::get('/teszt', [TesztController::class, 'teszt']); | felülre pedig: use App\Http\Controllers\tesztcontroller;
	a class neve nálam TesztController és a fájl neve tesztcontroller

resources/views - 3 új mappa: includes, layouts, pages
includes - új fájlok: head.blade.php (hmtl nyitótag - body nyitótag), nav.blade.php (nav), foot.blade.php (script és zárótagek)
layouts - új fájl: app.blade.php (@includes)

web.php - kiegíszítés az új names.blade.php-val


php artisan után ami megnyílik oldal az alap nyitó, fentre /teszt és belemegy a mappába

php artisan make:migration create_names_table -> új tábla létrehozása (database/migrations-be létrejön aznapi dátummal)
	a fájlon belül lehet módosítani, hogy régebbi verziókat is visza tudjunk állítani
	
	$table->string('mezonev', 100)->nullable()  //új mező ami 0 értéket is felvehet, 100 karakter hosszú lehet
	$table->string('mezonev')->default('alapérték')  //alap érték felvétele

	változtatás után php artisan migrate

models mappa - új fájl: Name.php
web.php-ba új route: Route::get('/names/create/{name}', [TesztController::class, 'namesCreate']);  //változót is tudunk benne használni

fentre /names/create/Béla - fel lehet venni nevet

tesztController.php - use App\Models\Name;   //ez után tudjuk használi a függvényt, mert importálja
	függvény megírása után fentre csak /names, és kihozza a tábla rekordjait

	$names = Name::find(i); //i. elemet adja vissza

	$names = Name::where('name', 'Kolos')->first();  //megadom hogy mit keresek, és az elsőt adja vissza (elhagyható), get-el az összes elemet adja vissza tömbben

	$names = Name::where('id', '>', 2)->get();  //2-nél nagyobb id-ú elem tömbjét adja vissza

	$names = Name::where('name', '<>', 'Béla')  //nem egyenlő
            ->whereAnd('id', '>', 1)  //id nagyobb mint 1
            ->orderBy('id', 'desc')  //csökkenő sorrend
            - get();  //tömbben adja vissza

names.béade.php-ban módosítottuk hogy szépen nézzen ki
